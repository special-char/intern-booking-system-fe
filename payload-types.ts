/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    users: User;
    tenants: Tenant;
    vans: Van;
    media: Media;
    technicians: Technician;
    services: Service;
    mybrand: Mybrand;
    territory: Territory;
    configurations: Configuration;
    'state-environmental': StateEnvironmental;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    vans: {
      technician: 'technicians';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    vans: VansSelect<false> | VansSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    technicians: TechniciansSelect<false> | TechniciansSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    mybrand: MybrandSelect<false> | MybrandSelect<true>;
    territory: TerritorySelect<false> | TerritorySelect<true>;
    configurations: ConfigurationsSelect<false> | ConfigurationsSelect<true>;
    'state-environmental': StateEnvironmentalSelect<false> | StateEnvironmentalSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  tenant?: (number | null) | Tenant;
  title?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  email: string;
  profilePhoto?: (number | null) | Media;
  /**
   * Used for domain-based tenant handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /tenant-slug/page-slug
   */
  slug: string;
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  /**
   * The Medusa Sales Channel ID associated with this tenant.
   */
  salesChannelId?: string | null;
  /**
   * Publishable API Key associated with this tenant.
   */
  publishableApiKey?: string | null;
  /**
   * The Nylas Grant ID associated with this tenant.
   */
  grant_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  tenant?: (number | null) | Tenant;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  roles?: ('super-admin' | 'owner' | 'manager' | 'technician')[] | null;
  name: string;
  profilePhoto?: (number | null) | Media;
  tenants?:
    | {
        tenant: number | Tenant;
        roles: ('tenant-admin' | 'tenant-viewer')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vans".
 */
export interface Van {
  id: number;
  tenant?: (number | null) | Tenant;
  vehicleId: string;
  /**
   * Enter the year and make (e.g., 2023 Mercedes Sprinter)
   */
  yearAndMake: string;
  /**
   * Enter the model and trim (e.g., 3501 LWB Extra high roof)
   */
  modelTrim: string;
  tireCapacity?: number | null;
  technician?: {
    docs?: (number | Technician)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "technicians".
 */
export interface Technician {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  email: string;
  password: string;
  mobilePhone: number;
  twilioPhone?: number | null;
  profilePhoto?: (number | null) | Media;
  mobileTireVan?: (number | Van)[] | null;
  user?: string | null;
  grant_id?: string | null;
  calendar_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  tenant?: (number | null) | Tenant;
  tyre_type?: ('8' | '6' | '5' | '4' | '3' | '2' | '1') | null;
  price: number;
  duration?: string | null;
  discount?: number | null;
  service: 'Trip Charge' | 'Install' | 'Tires & Install' | 'Patch Repair' | 'Balance & Rotation' | 'Fees';
  territory_id: number | Territory;
  isRefundable?: ('Yes' | 'No') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "territory".
 */
export interface Territory {
  id: number;
  tenant?: (number | null) | Tenant;
  name: string;
  polygon: {
    lat: number;
    lng: number;
    id?: string | null;
  }[];
  properties?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  type?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mybrand".
 */
export interface Mybrand {
  id: number;
  tenant?: (number | null) | Tenant;
  logo: number | Media;
  coverImage: number | Media;
  colorPalette: {
    name: 'primary' | 'light1' | 'light2' | 'dark';
    value: string;
    id?: string | null;
  }[];
  fontStyle:
    | 'inter'
    | 'roboto'
    | 'opensans'
    | 'lato'
    | 'poppins'
    | 'montserrat'
    | 'sourcesans'
    | 'raleway'
    | 'nunito'
    | 'rubik'
    | 'workSans'
    | 'quicksand'
    | 'manrope'
    | 'dmsans'
    | 'urbanist'
    | 'playfair'
    | 'merriweather'
    | 'lora'
    | 'crimsonPro'
    | 'spectral'
    | 'dmSerif'
    | 'cormorant'
    | 'josefinSans'
    | 'comfortaa'
    | 'righteous'
    | 'bebasNeue'
    | 'pacifico'
    | 'firaCode'
    | 'jetBrainsMono'
    | 'robotomono';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "configurations".
 */
export interface Configuration {
  id: number;
  tenant?: (number | null) | Tenant;
  territory: number | Territory;
  configuration_id: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "state-environmental".
 */
export interface StateEnvironmental {
  id: number;
  tenant?: (number | null) | Tenant;
  state: string;
  fees?:
    | {
        fee: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'vans';
        value: number | Van;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'technicians';
        value: number | Technician;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'mybrand';
        value: number | Mybrand;
      } | null)
    | ({
        relationTo: 'territory';
        value: number | Territory;
      } | null)
    | ({
        relationTo: 'configurations';
        value: number | Configuration;
      } | null)
    | ({
        relationTo: 'state-environmental';
        value: number | StateEnvironmental;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  name?: T;
  profilePhoto?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  profilePhoto?: T;
  domain?: T;
  slug?: T;
  allowPublicRead?: T;
  salesChannelId?: T;
  publishableApiKey?: T;
  grant_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vans_select".
 */
export interface VansSelect<T extends boolean = true> {
  tenant?: T;
  vehicleId?: T;
  yearAndMake?: T;
  modelTrim?: T;
  tireCapacity?: T;
  technician?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "technicians_select".
 */
export interface TechniciansSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  email?: T;
  password?: T;
  mobilePhone?: T;
  twilioPhone?: T;
  profilePhoto?: T;
  mobileTireVan?: T;
  user?: T;
  grant_id?: T;
  calendar_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  tenant?: T;
  tyre_type?: T;
  price?: T;
  duration?: T;
  discount?: T;
  service?: T;
  territory_id?: T;
  isRefundable?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mybrand_select".
 */
export interface MybrandSelect<T extends boolean = true> {
  tenant?: T;
  logo?: T;
  coverImage?: T;
  colorPalette?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  fontStyle?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "territory_select".
 */
export interface TerritorySelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  polygon?:
    | T
    | {
        lat?: T;
        lng?: T;
        id?: T;
      };
  properties?: T;
  type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "configurations_select".
 */
export interface ConfigurationsSelect<T extends boolean = true> {
  tenant?: T;
  territory?: T;
  configuration_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "state-environmental_select".
 */
export interface StateEnvironmentalSelect<T extends boolean = true> {
  tenant?: T;
  state?: T;
  fees?:
    | T
    | {
        fee?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}